[versions]
minSdk = "26"
compileSdk = "34"
targetSdk = "33"

kotlin = "2.0.0"
kotlin-coroutines = "1.8.1"
ksp = "2.0.0-1.0.21"

androidx-fragment = "1.7.1"
androidx-lifecycle = "2.8.1"

androidx-paging = "3.3.0"

androidx-room = "2.6.1"
androidx-workManager = "2.9.0"
androidx-camerax = "1.3.3"
androidx-recyclerview = "1.3.2"
androidx-appstartup = "1.1.1"
androidx-media3 = "1.3.1"
androidx-biometric = "1.1.0"

agp = "8.4.1"

decompose = "3.0.0"
mvikotlin = "4.0.0"

kotlinx-collections = "0.3.7"
kotlinx-serialization = "1.6.3"

accompanist = "0.34.0"
landscapist = "2.3.3"
# Linters
detekt = "1.23.6" # https://detekt.dev/docs/gettingstarted/gradle/

glide = "4.16.0"

dagger = "2.51.1"

rxReplayingShare = "2.2.0"

retrofit = "2.10.0"
okhttp = "4.12.0"

bigImageViewer = "1.8.1"
desugar_jdk_libs = "2.0.4"
flipper = "0.247.0"

date-picker = "1.1.11"

plugin-agconnect = "1.9.1.300"
plugin-appdistribution = "5.0.0"
plugin-publisher-googleplay = "3.9.0"
plugin-publisher-huawei = "1.4.2"
plugin-publisher-rustore = "0.3.1"
plugin-googleServices = "4.4.1"
sentryPlugin = "4.6.0"

moxy = "2.2.2"

mockk = "1.13.11"

anvil = "2.5.0-beta09"
anvil-utils = "0.2.0-SNAPSHOT"
leakcanary = "2.14"

arrow = "1.2.0"

[libraries]
# Linters
detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt" }
detekt-ruleset-compiler = "com.braisgabin.detekt:kotlin-compiler-wrapper:0.0.4" # https://github.com/BraisGabin/detekt-compiler-rules/releases
detekt-ruleset-ktlint = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-ruleset-compose = "io.nlopez.compose.rules:detekt:0.3.13" # https://github.com/mrmans0n/compose-rules
detekt-ruleset-arrow = "com.wolt.arrow.detekt:rules:0.4.0"
detekt-plugin-gitlab-report = "com.gitlab.cromefire:detekt-gitlab-report:0.3.3" # https://gitlab.com/cromefire/detekt-gitlab-report

compose-bom = { module = "androidx.compose:compose-bom", version = "2024.05.00" }
#compose-bom = { module = "dev.chrisbanes.compose:compose-bom", version = "2024.01.00-alpha01" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }

compose-landscapist-glide = { module = "com.github.skydoves:landscapist-glide", version.ref = "landscapist" }
compose-landscapist-palette = { module = "com.github.skydoves:landscapist-palette", version.ref = "landscapist" }
compose-landscapist-animation = { module = "com.github.skydoves:landscapist-animation", version.ref = "landscapist" }
compose-landscapist-placeholder = { module = "com.github.skydoves:landscapist-placeholder", version.ref = "landscapist" }

compose-accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
compose-accompanist-swipeRefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
compose-accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extension-compose-jetpack = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
mvikotlin-logging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "mvikotlin" }
mvikotlin-extensions-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }

kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
kotlin-coroutines-playServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlin-coroutines" }
kotlin-coroutines-rxjava2 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2", version.ref = "kotlin-coroutines" }
kotlinx-collections-immutable = "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.7"
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

androidx-appcompat = "androidx.appcompat:appcompat:1.7.0"

androidx-core-ktx = "androidx.core:core-ktx:1.13.1"
androidx-core-splashscreen = "androidx.core:core-splashscreen:1.0.1"
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-activity-compose = "androidx.activity:activity-compose:1.9.0"
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }

androidx-constraintLayout = "androidx.constraintlayout:constraintlayout:2.1.4"
androidx-swipeRefreshLayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "androidx-media3" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "androidx-media3" }
androidx-media3-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "androidx-media3" }

androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "androidx-paging" }
androidx-paging-common = { module = "androidx.paging:paging-common", version.ref = "androidx-paging" }
androidx-paging = { module = "androidx.paging:paging-runtime", version.ref = "androidx-paging" }
androidx-paging-rxJava = { module = "androidx.paging:paging-rxjava2", version.ref = "androidx-paging" }

androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
androidx-room-rx = { module = "androidx.room:room-rxjava2", version.ref = "androidx-room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }

guava = "com.google.guava:guava:33.1.0-android"
androidx-workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-workManager" }
androidx-workManager-rx = { module = "androidx.work:work-rxjava2", version.ref = "androidx-workManager" }

androidx-camerax-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "androidx-camerax" }
androidx-camerax-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "androidx-camerax" }
androidx-camerax-cameraView = { module = "androidx.camera:camera-view", version.ref = "androidx-camerax" }
androidx-camerax-extensions = { module = "androidx.camera:camera-extensions", version.ref = "androidx-camerax" }

androidx-appstartup = { module = "androidx.startup:startup-runtime", version.ref = "androidx-appstartup" }

androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "androidx-biometric" }

flexboxLayout = "com.google.android.flexbox:flexbox:3.0.0"
material = "com.google.android.material:material:1.12.0"

decoro = "ru.tinkoff.decoro:decoro:1.5.0"

markdown = "com.github.jeziellago:compose-markdown:0.5.0"


libphonenumber = "com.googlecode.libphonenumber:libphonenumber:8.13.24"

local-swipeLayout = "local.rambler.android:swipe-layout:1.0.17"
local-chipsLayoutManager = "local.ChipsLayoutManager:ChipsLayoutManager:0.3.7-ilyagulya"
local-dateRangePicker = "local.DateRangePicker:rangedatepicker:1.4.2-ilyagulya"
local-ibox = "ibox.pro:sdk.external:1.9.8"

sberpay = "ru.spaymentsplus.libraries:spaysdk:2.0.5"

mlkit-barcodeScanning = "com.google.mlkit:barcode-scanning:17.2.0"

adapterDelegates = "com.hannesdorfmann:adapterdelegates4:4.3.0"
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
leakcanary-watcher = { module = "com.squareup.leakcanary:leakcanary-object-watcher-android", version.ref = "leakcanary" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }
glide-okhttp = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "glide" }

cicerone = "local.ru.terrakok.cicerone:cicerone:5.0.0"

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
javax-inject = "javax.inject:javax.inject:1"

rxjava = "io.reactivex.rxjava2:rxjava:2.2.21"
rxjava-extensions = "com.github.akarnokd:rxjava2-extensions:0.20.10"
rxjava-kotlin = "io.reactivex.rxjava2:rxkotlin:2.4.0"
rxjava-android = "io.reactivex.rxjava2:rxandroid:2.1.1"
rxjava-relay = "com.jakewharton.rxrelay2:rxrelay:2.1.1"
rxjava-replayingShare = { module = "com.jakewharton.rx2:replaying-share", version.ref = "rxReplayingShare" }
rxjava-replayingShare-kotlin = { module = "com.jakewharton.rx2:replaying-share-kotlin", version.ref = "rxReplayingShare" }

rxbinding-core = "com.jakewharton.rxbinding3:rxbinding-core:3.1.0"

retrofit-bom = { module = "com.squareup.retrofit2:retrofit-bom", version.ref = "retrofit" }
retrofit = { module = "com.squareup.retrofit2:retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson" }
retrofit-adapter-rxjava = { module = "com.squareup.retrofit2:adapter-rxjava2" }
retrofit-adapter-result = "com.github.skydoves:retrofit-adapters-result:1.0.10"
retrofit-responseTypeKeeper = { module = "com.squareup.retrofit2:response-type-keeper", version.ref = "retrofit" }

gson = "com.google.code.gson:gson:2.10.1"

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

installReferrer = "com.android.installreferrer:installreferrer:2.2"

appsflyer = "com.appsflyer:af-android-sdk:6.12.2"
appsflyer-oaid = "com.appsflyer:oaid:6.2.4"

timber = "com.jakewharton.timber:timber:5.0.1"

arrow-bom = { module = "io.arrow-kt:arrow-stack", version.ref = "arrow" }
arrow = { module = "io.arrow-kt:arrow-core" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines" }

yandex-mapkit = "com.yandex.android:maps.mobile:4.5.0-lite"
yandex-auth-sdk = "com.yandex.android:authsdk:3.1.0"

vk-id-sdk = "com.vk.id:vkid:1.3.0"
vk-id-one-tap-sdk = "com.vk.id:onetap-compose:1.3.0"

simpleMagic = "com.j256.simplemagic:simplemagic:1.16"

zxing-core = "com.google.zxing:core:3.5.3"

bigImageViewer = { module = "com.github.piasy:BigImageViewer", version.ref = "bigImageViewer" }
bigImageViewer-glide = { module = "com.github.piasy:GlideImageLoader", version.ref = "bigImageViewer" }

epoxy = "com.airbnb.android:epoxy:4.3.1"

flipper = { module = "com.facebook.flipper:flipper", version.ref = "flipper" }
flipper-plugin-network = { module = "com.facebook.flipper:flipper-network-plugin", version.ref = "flipper" }

soloader = "com.facebook.soloader:soloader:0.11.0"

sentry = "io.sentry:sentry-android:7.9.0"

date-picker = { module = "com.github.commandiron:WheelPickerCompose", version.ref = "date-picker" }
viewbinding-propertydelegate = "com.github.kirich1409:viewbindingpropertydelegate-noreflection:1.4.7"

play-core = "com.google.android.play:core:1.10.3"
play-review = "com.google.android.play:review:2.0.1"
play-review-ktx = "com.google.android.play:review-ktx:2.0.1"
ru-store-review = "ru.rustore.sdk:review:0.1.6"

gms-location = "com.google.android.gms:play-services-location:21.2.0"
gms-auth-phone = "com.google.android.gms:play-services-auth-api-phone:18.0.2"
gms-ads-identifier = "com.google.android.gms:play-services-ads-identifier:18.0.1"

hms-core = "com.huawei.agconnect:agconnect-core:1.7.2.300"
hms-crash = "com.huawei.agconnect:agconnect-crash:1.7.2.300"
hms-remoteConfig = "com.huawei.agconnect:agconnect-remoteconfig:1.7.2.300"
hms-location = "com.huawei.hms:location:6.7.0.300"
hms-push = "com.huawei.hms:push:6.9.0.300"
hms-installReferrer = "com.huawei.hms:ads-installreferrer:3.4.58.300"
hms-adsId = "com.huawei.hms:ads-identifier:3.4.56.300"
hms-appService = "com.huawei.hms:appservice:5.0.4.303"
hms-analytics = "com.huawei.hms:hianalytics:6.7.0.300"
hms-id = "com.huawei.hms:hwid:6.7.0.300"

firebase-bom = { module = "com.google.firebase:firebase-bom", version = "33.0.0" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging-ktx" }
firebase-remoteConfig = { module = "com.google.firebase:firebase-config-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-performance-ktx = { module = "com.google.firebase:firebase-perf-ktx" }

plugin-android = { module = "com.android.tools.build:gradle", version.ref = "agp" }
plugin-android-gradleApi = { module = "com.android.tools.build:gradle-api", version.ref = "agp" }
plugin-googleServices = { module = "com.google.gms:google-services", version.ref = "plugin-googleServices" }
plugin-agconnect = { module = "com.huawei.agconnect:agcp", version.ref = "plugin-agconnect" }
plugin-firebase-appdistribution = { module = "com.google.firebase:firebase-appdistribution-gradle", version.ref = "plugin-appdistribution" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-kotlin-compose = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
plugin-publisher-huawei = { module = "ru.cian:huawei-publish-gradle-plugin", version.ref = "plugin-publisher-huawei" }
plugin-publisher-googleplay = { module = "com.github.triplet.gradle:play-publisher", version.ref = "plugin-publisher-googleplay" }
plugin-publisher-googleplay-android = { module = "com.github.triplet.gradle:android-publisher", version.ref = "plugin-publisher-googleplay" }
plugin-publisher-rustore = { module = "ru.cian.rustore-publish-gradle-plugin:ru.cian.rustore-publish-gradle-plugin.gradle.plugin", version.ref = "plugin-publisher-rustore" }
plugin-anvil = { module = "com.squareup.anvil:gradle-plugin", version.ref = "anvil" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
plugin-sentry = { module = "io.sentry:sentry-android-gradle-plugin", version.ref = "sentryPlugin" }
plugin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

moxy = { module = "com.github.moxy-community:moxy", version.ref = "moxy" }
moxy-androidx = { module = "com.github.moxy-community:moxy-androidx", version.ref = "moxy" }
moxy-ktx = { module = "com.github.moxy-community:moxy-ktx", version.ref = "moxy" }
moxy-compiler = { module = "com.github.moxy-community:moxy-compiler", version.ref = "moxy" }

anvil-compiler-api = { module = "com.squareup.anvil:compiler-api", version.ref = "anvil" }
anvil-compiler-utils = { module = "com.squareup.anvil:compiler-utils", version.ref = "anvil" }
anvil-utils-compiler = { module = "me.gulya.anvil:compiler", version.ref = "anvil-utils" }
anvil-utils-annotations = { module = "me.gulya.anvil:annotations", version.ref = "anvil-utils" }

google-autoservice-annotations = "com.google.auto.service:auto-service-annotations:1.1.1"
google-autoservice-compiler = "com.google.auto.service:auto-service:1.1.1"
google-autoservice-ksp = "dev.zacsweers.autoservice:auto-service-ksp:1.1.0"

buildscript-gitlabCiDsl = "com.github.pcimcioch:gitlab-ci-kotlin-dsl:1.6.0"
buildscript-apacheCommons = "org.apache.commons:commons-configuration2:2.7"
buildscript-jackson-kotlin = "com.fasterxml.jackson.module:jackson-module-kotlin:2.17.0-rc1"
buildscript-kotlinpoet = "com.squareup:kotlinpoet:1.17.0"
buildscript-kotlinpoet-ksp = "com.squareup:kotlinpoet-ksp:1.17.0"
buildscript-ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
buildscript-androidBuildTools = "com.android.tools:sdk-common:31.3.2"
buildscript-jakarta = "jakarta.xml.bind:jakarta.xml.bind-api:2.3.3"
buildscript-jaxbRuntime = "org.glassfish.jaxb:jaxb-runtime:2.3.3"

bouncycastle = "org.bouncycastle:bcpkix-jdk18on:1.77"

test-junit = "junit:junit:4.13.2"
test-runner = "androidx.test:runner:1.5.2"
test-androidx-savedstate = "androidx.savedstate:savedstate:1.2.1"
test-kotlin-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
test-espresso = "androidx.test.espresso:espresso-core:3.5.1"
test-robolectric = "org.robolectric:robolectric:4.12.2"
test-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
test-mockkAndroid = { module = "io.mockk:mockk-android", version.ref = "mockk" }
test-workManager = { module = "androidx.work:work-testing", version.ref = "androidx-workManager" }



[bundles]
mvikotlin = ["mvikotlin", "mvikotlin-main", "mvikotlin-logging", "mvikotlin-extensions-coroutines"]
compose = ["compose-ui", "compose-ui-tooling-preview", "compose-foundation", "compose-material", "compose-material3"]
accompanist = ["compose-accompanist-swipeRefresh"]
landscapist = ["compose-landscapist-glide", "compose-landscapist-palette", "compose-landscapist-animation"]
decompose = ["decompose", "decompose-extension-compose-jetpack"]
moxy = ["moxy", "moxy-androidx", "moxy-ktx"]
room = ["androidx-room-runtime", "androidx-room-rx", "androidx-room-ktx"]
workManager = ["androidx-workManager", "androidx-workManager-rx"]
camerax = ["androidx-camerax-camera2", "androidx-camerax-lifecycle", "androidx-camerax-cameraView", "androidx-camerax-extensions"]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
firebase-appdistribution = { id = "com.google.firebase.appdistribution", version.ref = "plugin-appdistribution" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version = "3.0.1" }
firebase-performance = { id = "com.google.firebase.firebase-perf", version = "1.4.2" }
gms-googleServices = { id = "com.google.gms.google-services", version.ref = "plugin-googleServices" }
agconnect = { id = "com.huawei.agconnect", version.ref = "plugin-agconnect" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

publisher-googleplay = { id = "com.github.triplet.play", version.ref = "plugin-publisher-googleplay" }
publisher-huawei = { id = "ru.cian.huawei-publish-gradle-plugin", version.ref = "plugin-publisher-huawei" }
publisher-rustore = { id = "ru.cian.rustore-publish-gradle-plugin", version.ref = "plugin-publisher-rustore" }

gradleDoctor = { id = "com.osacky.doctor", version = "0.9.1" }

anvil = { id = "com.squareup.anvil", version.ref = "anvil" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version = "1.21.0" }

scabbard = { id = "scabbard.gradle", version = "0.5.0" }

sentry = { id = "io.sentry.android.gradle", version.ref = "sentryPlugin" }